#/bin/bash

# Only for ArchLinux-5.11.16+ [MBR] or [EFI]

# ========================= install ========================== #
# 1.step: check boot 
# check boot: if dictionary exists; then efi else maybe mbr
ls /sys/firmware/efi/efivars


# 2.step: connect network
iwctl # connect wifi
[X] device list
[X] station wlan0 scan
[X] station wlan0 get-networks
[X] station wlan0 connect wifiname
[X] exit 

# {{{ if wlan0 off
# ip link set wlan0 up # if no posible by rf-kill
# rfkill unblock wifi # then reinput iwctl...
# }}}

ping.archlinux.org # test connect


# 3.step: sync time
timedatectl set-ntp true
timedatectl status


# 4.step: update mirrors
reflector -c China -a 6 --sort rate --save  /etc/pacman.d/mirrorlist
pacman -Syy


# 5.step: parted disk && gen bootloader
lsblk # list disk device

# {{{ MBR
cfdisk /dev/sdx # part sdx
# only for reference:
# [new] -> [type]-> [write]
# disk        size   type             mnt
# /dev/sda1   512M   Linux filesystem [/boot]
# /dev/sda2   40G    Linux filesystem [/]
# /dev/sda3   64G    Linux filesystem [/home]
# /dev/sda4   4G     Linux swap

mkfs.ext2 /dev/sda1
mkfs.ext4 /dev/sda2
mkfs.ext4 /dev/sda3

mount /dev/sda2 /mnt
mkdir /mnt/{boot,home}
mount /dev/sda1 /mnt/boot
mount /dev/sda3 /mnt/home
mkswap /dev/sda4
swapon /dev/sda4
# END MBR }}}

# {{{ EFI
# only for reference:
# disk        size   type             mnt
# /dev/sda1   512M   EFI              [/efi]
# /dev/sda2   1G     FAT32            [/boot]
# /dev/sda3   120G   EXT4             [/]
# /dev/sda4   336G   EXT4             [/home]
# /dev/sda5   8.3G   Linux swap
mount /dev/sda3 /mnt
mkdir /mnt/{boot,home}
mkdir /mnt/boot/EFI
mount /dev/sda2 /mnt/boot
mount /dev/sda1 /mnt/boot/EFI
mount /dev/sda4 /mnt/home
mkswap /dev/sda5
swapon /dev/sda5
# }}}


# 6.step gen grub loader
pacstrap /mnt base base-devel dhcpcd linux linux-firmware
genfstab -U /mnt >> /mnt/etc/fstab


# 7.step: chroot
arch-chroot /mnt
# time zone && locale
ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
hwclock --systohc
echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
echo "zh_CN.UTF-8 UTF-8" >> /etc/locale.gen
locale-gen
echo "LANG=en_US.UTF-8" > /etc/locale.conf
export LANG=en_US.UTF-8
passwd # set password
pacman -S iwd sudo vim
echo arch > /etc/hostname #hostname


# 8.step choose boot-loader
# {{{ MBR
pacman -S grub
grub-install  --no-floppy --target=i386-pc --force --recheck --debug /dev/sda
grub-mkconfig -o /boot/grub/grub.cfg
exit
umount /mnt/{boot,home,}
# }}}

# {{{ GPT
pacman -S grub efibootmgr
# {{{ if boot on usb
# grub-install --target=x86_64-efi --removable --efi-directory=/boot/EFI --bootloader-id=grub
# chmod -x /etc/grub.d/30_os-proper
# }}}
# {{{ else
grub-install --target=x86_64-efi --efi-directory=/boot/EFI --bootloader-id=grub
# }}}

vim /etc/default/grub
# print boot log
# ===============================
# GRUB_CMDLINE_LINUX_DEFAULT="splash"
# GRUB_CMDLINE_LINUX="splash"
# ::1 localhost
# 127.0.1.1 arch.localdomain arch
# ===============================
grub-mkconfig -o /boot/grub/grub.cfg
exit
umount /mnt/boot/EFI
umount /mnt/{boot,home,}
# }}}

# {{{ if boot load slowly; then do
# cat /etc/fstab | grep swap
# blkid | grep swap 
# # if uuid is not equal,
# # modify fstab's swap uuid by blkid
# }}}


# 9.step exit && umount
reboot


# ==================== config ====================== #
# 1.step: wifi
systemctl enable systemd-resolved dhcpcd iwd
systemctl start  systemd-resolved dhcpcd iwd

# 2.step: host
vim /etc/hosts
# ===============================
# 127.0.0.1 localhost
# ::1 localhost
# 127.0.1.1 arch.localdomain arch
# ===============================

# 3.step: add group/user
groupadd -g 1248 lynn
useradd -m -g lynn -G wheel -s /bin/bash -d /home/aylax aylax
passwd aylax
echo "aylax ALL=(ALL) ALL" >> /etc/sudoers


# ==================== driver ====================== #
# disable annoying sounds
echo "set bell-style none" >> /etc/inputrc
# {{{Fix wlan0 not found & if echo  BCM43142 802.11b/g/n (rev 0)
lspci -k | grep -A 2 -i network

vim /etc/pacman.conf
# ===============================
# [archlinuxcn]
# Server=http://repo.archlinuxcn.org/$arch
# ===============================

pacman -Syy
pacman -S archlinuxcn-keyring
pacman -S yaourt linux-headers
yaourt -S broadcom-wl-dkms
# reboot
# }}}

# {{{Fix bluetooth not found 
dmesg | grep -i blue | grep BCM
# Download BCM43142A0-105b-e065.hcd
# https://github.com/winterheart/broadcom-bt-firmware
mv BCM43142A0-105b-e065.hcd /lib/firmware/brcm/
# reboot
# }}}


# ==================== x-window ====================== #
# {{{ Card
lspci  | grep -i vga 
pacman -S xf86-video-vesa # Common or
pacman -S mesa xf86-video-intel # Intel
# }}}

pacman -S xorg-xrandr
pacman -S xorg-server xorg-xinit i3-gaps
pacman -S rofi ranger alacritty
cp /etc/X11/xinit/xinitrc ~/.xinitrc

vim ~/.xinitrc 
# ===============================
## do comment 
## from :Line twn&
## to :Line exec xterm...
# exec i3
startx # to x-window
# ===============================


# ==================== aylax default ====================== #

# clone aylax-dothub.d && init home context
pacman -S git wget openssh
ssh-keygen
# git confg --global user.email youremail
# git confg --global user.name yourname
# copy $HOME/.ssh/id_rsa.pub to github
cd $HOME
pacman -S google-chrome i3status-rust
pacman -S noto-fonts-cjk noto-fonts-emoji
git clone git@github.com:aylax/dothub.d.git
sh dothub.d/font.d/install.sh
sh dothub.d/neovim.d/install.sh
cd dothub.d/data.d

# install neovim
pacman -S neovim
wget https://bootstrap.pypa.io/get-pip.py
python get-pip.py && rm get-pip.py
vim $HOME/.bashrc
# ===============================
# export PATH=$HOME/.local/bin:$PATH
# ===============================
pip install pynvim


# {{{ config Second Output Screen
xrandr # if not found exec xorg-xrandr
xrandr --output HDMI-1 --mode 1920x1080 # output second screen
xrandr --output eDP-1 --off # off current screen
# }}}


# {{{ Bluetooth
rfkill list
# rfkill unblock bluetooth
pacman -S bluez bluez-utils
systemctl enable bluetooth
systemctl start bluetooth
bluetoothctl
[X] power on
[X] agent on
[X] default agent
[X] scan on
[X] trust :ID:
[X] connect :ID:
[X] exit
# }}}

# {{{Fix Audio work wrong
pacman -S alsa-utils
aplay -l # show audio device
amixer scontrols # show cards
amixer -c 1 scontrols # show master and cards

vim $HOME/.asoundrc
# ===============================
defaults.pcm.card 1
defaults.pcm.device 1
defaults.ctl.card 1
# ===============================

alsamixer # sound volume control
# }}}


# {{{ install ibus 
pacman -S ibus-rime
vim ~/.xinitrc
# ===============================
export GTK_IM_MODULE=ibus
export QT_IM_MODULE=ibus
export XMODIFIERS=@im=ibus
export GLFW_IM_MODULE=@im=ibus
# ===============================

ibus-setup

vim ~/.config/i3/config
# ===============================
exec --no-startup-id ibus-daemon -dr   
# ===============================

#reboot
# }}}


# ==================== aylax develop ====================== #
# GPU Support
pacman -S vulkan-intel vulkan-devel

# docker
pacman -S docker
systemctl enable docker
systemctl start docker
usermod -aG docker $(whoami)
mkdir -p /etc/docker

tee /etc/docker/daemon.json <<-'EOF'
{
  "data-root": "/mnt/docker"
}
EOF
systemctl reload daemon-reload
systemctl restart docker
reboot


# fcitx
pacman -S fcitx5 fcitx5-qt fcitx5-gtk
pacman -S fcitx5-configtool fcitx5-rime
pacman -S fcitx5-material-color

vim ~/.config/fcitx5/conf/classicui.conf
# ===============================
# 垂直候选
Vertical Candidate List=False
# 按屏幕 DPI 使用
PerScreenDPI=True
# Font (设置成你喜欢的字体)
Font="Noto Sans Mono CJK SC Regular 12"
# 主题
Theme=Material-Color-DeepPurple
# ===============================

